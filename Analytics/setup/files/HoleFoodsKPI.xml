<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2012.2.4 (Build 954)" ts="2013-06-20 10:22:03">
<Class name="Training.Analytics.Demos.HoleFoodsKPI">
<Description>
DeepSeeFundamentals.Demos.HoleFoodsKP</Description>
<Super>%DeepSee.KPI</Super>
<TimeChanged>62712,52136.552447</TimeChanged>
<TimeCreated>62004,42806.394457</TimeCreated>

<XData name="KPI">
<Description>
This XData definition defines the KPI.</Description>
<XMLNamespace>http://www.intersystems.com/deepsee/kpi</XMLNamespace>
<Data><![CDATA[
<kpi xmlns="http://www.intersystems.com/deepsee/kpi"
 name="Training/Analytics/Demos/HoleFoods KPI" sourceType="mdx"
 caption=""
>


<property name="Units Sold" columnNo="1"/>
<property name="Amount Sold" columnNo="2"/>
<action name="Synchronize"/>
<filter name="Region"/>
</kpi>
]]></Data>
</XData>

<Method name="%OnLoadKPI">
<Description>
Notification that this KPI is being executed.
This is a good place to override properties, such as range and threshold.</Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="%OnGetMDX">
<Description>
Return an MDX statement to execute.</Description>
<FormalSpec><![CDATA[&pMDX:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set pMDX = "SELECT {[Measures].[Units Sold], [Measures].[Amount Sold]} On 0,[Outlet].[H1].[All Outlet] On 1, FROM [HOLEFOODS] %FILTER [DateOfSale].[YearSold].&[NOW]"
	
 If ..%filterValues.Region '= ""
{
	Set region=..%filterValues.Region	
      Set filter = 
  " %FILTER [Outlet].[H1].[Region]."_region
	Set pMDX=pMDX_filter
	
}
	
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="%OnDashboardAction">
<Description>
This callback is invoked from a dashboard when an action defined by this dashboard is invoked.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pAction:%String,pContext:%ZEN.proxyObject</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// pAction is the name of the action (as defined in the XML list).
	// pContext contains information from the client
	// and can be used to return information.
	
	if (pAction="Synchronize")
	{
		Do ##class(%DeepSee.Utils).%SynchronizeCube("HoleFoods",0)	
		Set pContext.command="refresh:*"
	}
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="%OnGetFilterMembers">
<Description><![CDATA[
Callback to get additional members for a KPI filter.
This takes the form:<br/>
pMembers($I(pMembers))=$LB(text,value)<br/>
<var>pSearchKey</var> is the search key entered by the user, if applicable.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pFilter:%String,*pMembers:%List,pSearchKey:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If (pFilter="Region")
	{
		set tSC=..%GetMembersForFilter("HoleFoods","[Outlet].[H1].[Region]",.pMembers)	
	if $$$ISERR(tSC) Quit tSC
	}
	Quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>
