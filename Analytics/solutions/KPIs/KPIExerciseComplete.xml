<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for Windows (x86-64) 2021.1 (Build 215U)" ts="2021-12-14 15:31:38">
<Class name="Training.Analytics.SQLKPI">
<Description>
A an example KPI for demonstration and training</Description>
<Super>%DeepSee.KPI</Super>
<TimeChanged>66092,55364.80224</TimeChanged>
<TimeCreated>66092,55047.673333</TimeCreated>

<Parameter name="DOMAIN">
</Parameter>

<Parameter name="RESOURCE">
</Parameter>

<XData name="KPI">
<Description>
This XData definition defines the KPI.</Description>
<XMLNamespace>http://www.intersystems.com/deepsee/kpi</XMLNamespace>
<Data><![CDATA[
<kpi xmlns="http://www.intersystems.com/deepsee/kpi"
 name="Training/Analytics/SQL Based KPI" sourceType="sql"
 caption="SQL Based KPI"
 sql=""
>
<property name="Product" disabled="true" displayName="Product" columnNo="1"/>
<property name="SKU" displayName="SKU" columnNo="2"/>
<property name="Price" displayName="Price" columnNo="3"/>
<property name="Amount Sold" displayName="Amount Sold" columnNo="4"/>
<property name="Amount Targeted" displayName="Amount Targeted" columnNo="5"/>
<filter name="Region" sql="Select Distinct Name from HoleFoods.Region" displayName="Region" filterProperty=""/>
<action name="Show Product" displayName="Show Product"/>
</kpi>
]]></Data>
</XData>

<Method name="%OnLoadKPI">
<Description>
Notification that this KPI is being executed.
This is a good place to override properties, such as range and threshold.</Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="%OnGetSQL">
<Description>
Return an SQL statement to execute.</Description>
<FormalSpec><![CDATA[&pSQL:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set pSQL="Select TOP 1000 Product->Name Product,"
		_" Product ProductCode,Product->Price Price,"
		_" SUM(AmountOfSale) Amount, SUM(TargetAmount)"
		_" Targeted From HoleFoods.SalesTransaction Group By"
		_" Product"
	If $IsObject(..%filterValues){
		
		Set tWhere=""
		
		if (..%filterValues.Region '="") {
		 
		  Set tWhere = ..%GetSQLForFilter("Outlet->Country->Region->Name","Region")
		 
		}
		
		}
		 
		 if (tWhere '="") {
			 
			 Set tSQL1=$Piece(pSQL,"Group By",1)
			 Set tSQL2=$Piece(pSQL,"Group By",2)
			 Set pSQL=tSQL1_" WHERE "_tWhere
			 Set pSQL=pSQL_" Group By "_tSQL2
			 
		 }
		
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="%OnDashboardAction">
<Description>
This callback is invoked from a dashboard when an action defined by this dashboard is invoked.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pAction:%String,pContext:%ZEN.proxyObject</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// pAction is the name of the action (as defined in the XML list).
	// pContext contains information from the client
	// and can be used to return information.
	
	If pAction="Show Product"
	{
		Set value = $ZStrip(pContext.currValue,"<>W")
		Set pContext.command = "popup:HoleFoodsDisplay.CSP?Product="_value
	}
	Quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>
